#include<bits/stdc++.h>
using namespace std;
using ll=long long;
const int mod=1000000007;
struct matrix{
    ll c[101][101];
    matrix(){memset(c,0,sizeof c);}
}A,res;
ll n,k;

matrix operator*(matrix &x,matrix &y){
    matrix t;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            for(int k=1;k<=n;k++)
                t.c[i][j]=(t.c[i][j]+x.c[i][k]*y.c[k][j])%mod;
    return t;
}

void quickpow(ll k){
    for(int i=1;i<=n;i++)res.c[i][i]=1;
    while(k){
        if(k&1)res=res*A;
        A=A*A;
        k>>=1;
    }
}

void solve(){
    cin>>n>>k;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            cin>>A.c[i][j];
    quickpow(k);
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++)
            cout<<res.c[i][j]<<" ";
        cout<<endl;
    }
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    solve();
    return 0;
}
